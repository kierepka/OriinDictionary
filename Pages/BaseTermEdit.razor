@page "/editbaseterm/{BaseTermId:long}"
@page "/editbaseterm/{BaseTermSlug}"
@using OriinDic.Helpers
@using OriinDic.Store.BaseTerms
@inherits DicBasePage

<PageHeader IsLoading="@BaseTermsState.Value.IsLoading" CurrentAlertText="@CurrentAlert" LoadingText="@MyText?.loading" HeaderText="@MyText?.headerBaseTermEdit" />

<Row>
    <Column>
        @if (BaseTermsState.Value.BaseTerm is null)
        {
            <a href="/">Base term @MyText?.noData !</a>
        }
        else
        {
            <Card Margin="Margin.Is4.OnY">
                <CardHeader>
                    <CardTitle>[@BaseTermLanguage]@BaseTermsState.Value.BaseTerm.Name</CardTitle>
                    <CardSubtitle>@MyText?.baseTermHeader</CardSubtitle>
                </CardHeader>
                <CardBody>
                    <Field IsHorizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.baseTermName</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">

                            <AuthorizeView Roles="@Const.RolesBaseEditors">
                                <Authorized>
                                    <TextEdit Placeholder="@MyText?.baseTermName"
                                              @bind-Text="@baseTerm.Name" />
                                </Authorized>
                                <NotAuthorized>
                                    <div class="field"><div class="control">@BaseTermsState.Value.BaseTerm.Name</div></div>
                                </NotAuthorized>
                            </AuthorizeView>
                        </FieldBody>
                    </Field>
                    <Field IsHorizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.baseTermDefinition</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <AuthorizeView Roles="@Const.RolesBaseEditors">
                                <Authorized>
                                    <TextEdit Placeholder="@MyText?.baseTermDefinition"
                                              @bind-Text="@baseTerm.Definition" />
                                </Authorized>
                                <NotAuthorized>
                                    <div class="field"><div class="control">@BaseTermsState.Value.BaseTerm.Definition</div></div>
                                </NotAuthorized>
                            </AuthorizeView>
                        </FieldBody>
                    </Field>
                    <Field IsHorizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.baseTermExamples</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <AuthorizeView Roles="@Const.RolesBaseEditors">
                                <Authorized>
                                    <ListExamples Examples="@BaseTermsState.Value.BaseTerm.GetExamples()" OnExampleCallback="OnExampleAdd" />
                                </Authorized>
                                <NotAuthorized>
                                    <ListGroup Flush="true">
                                        @foreach (var e in baseTerm.Examples)
                                        {
                                            <div class="field"><div class="control">@e</div></div>
                                        }
                                    </ListGroup>
                                </NotAuthorized>
                            </AuthorizeView>
                        </FieldBody>
                    </Field>
                    <Field IsHorizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.baseTermSynonyms</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <AuthorizeView Roles="@Const.RolesBaseEditors">
                                <Authorized>
                                    <ListSynonyms Synonyms="@BaseTermsState.Value.BaseTerm.GetSynonyms()" OnSynonymCallback="OnSynonymAdd" />
                                </Authorized>
                                <NotAuthorized>
                                    <ListGroup Flush="true">
                                        @foreach (var s in baseTerm.Synonyms)
                                        {
                                            <div class="field"><div class="control">@s</div></div>
                                        }
                                    </ListGroup>
                                </NotAuthorized>
                            </AuthorizeView>
                        </FieldBody>
                    </Field>
                    <Field IsHorizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.baseTermSlug</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            @BaseTermsState.Value.BaseTerm.Slug
                        </FieldBody>
                    </Field>
                </CardBody>
                <CardFooter Padding="Padding.Is3">
                    <Field Horizontal="true">
                        <FieldBody ColumnSize="ColumnSize.Is12">
                            <Buttons Role="ButtonsRole.Addons">
                                <AuthorizeView Roles="@Const.RolesBaseEditors">
                                    <Authorized>
                                        <Button Type="ButtonType.Submit" Color="Color.Primary" Clicked="@OnSaveClicked">@MyText?.save</Button>
                                        <input class="button" type="button" value="@MyText?.back" onClick="history.back();">
                                    </Authorized>
                                </AuthorizeView>
                                <Button Type="ButtonType.Submit" Color="Color.Info" Clicked="@OnSpeechPlClicked">@MyText?.speech</Button>
                            </Buttons>
                        </FieldBody>
                    </Field>
                </CardFooter>
            </Card>
            <Card Margin="Margin.Is4.FromBottom">
                <CardHeader>
                    <CardTitle>@MyText?.links</CardTitle>
                </CardHeader>
                <CardBody>
                    <AuthorizeView Roles="@Const.RolesBaseEditors">
                        <Authorized>
                            <ListLinks Links="@Links" OnLinkCallback="OnLinkAdd" />
                        </Authorized>
                        <NotAuthorized>
                            <ListGroup Flush="true">
                                @foreach (var link in Links)
                                {
                                    <div class="field"><div class="control"><a href="context.Link">@link</a></div></div>
                                }
                            </ListGroup>
                        </NotAuthorized>
                    </AuthorizeView>
                </CardBody>
            </Card>
        }
    </Column>
</Row>
