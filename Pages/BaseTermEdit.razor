@page "/editbaseterm/{BaseTermId:long}"
@page "/editbaseterm/{BaseTermSlug}"
@using OriinDic.Helpers
@inherits DicBasePage

<PageHeader IsLoading="@(BaseTermsState?.Value.IsLoading ?? true)" CurrentAlertText="@CurrentAlert" LoadingText="@MyText?.Loading" HeaderText="@HeaderForBaseTerm" />

<AuthorizeView Roles="@Const.RolesBaseEditors">
    <Authorized>
        <Row>            
            <Column>
                @if (BaseTermsState?.Value?.ResultBaseTranslation.BaseTerm is not null)
                {
                    <Card Margin="Margin.Is4.OnY">
                        <CardHeader>
                            <CardTitle>[@BaseTermLanguage]
                                @BaseTermsState.Value.ResultBaseTranslation.BaseTerm.Name
                            </CardTitle>
                        </CardHeader>
                        <CardBody>
                            <Validations Mode="ValidationMode.Auto">
                                <Validation Validator="@ValidationRule.IsNotEmpty">
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.BaseTermName</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.Is10">
                                            <TextEdit Placeholder="@MyText?.BaseTermName"
                                                      @bind-Text="@BaseTermsState.Value.ResultBaseTranslation.BaseTerm.Name">
                                                <Feedback>
                                                    <FieldHelp>@MyText?.BaseTermNameHelp</FieldHelp>
                                                    <ValidationError>@MyText?.BaseTermNameError</ValidationError>
                                                </Feedback>
                                            </TextEdit>
                                        </FieldBody>
                                    </Field>
                                </Validation>

                                <Field Horizontal="true">
                                    <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.BaseTermDefinition</FieldLabel>
                                    <FieldBody ColumnSize="ColumnSize.Is10">
                                        <TextEdit Placeholder="@MyText?.BaseTermDefinition"
                                                  @bind-Text="@BaseTermsState.Value.ResultBaseTranslation.BaseTerm.Definition">
                                            <Feedback>
                                                <FieldHelp>@MyText?.BaseTermDefinitionHelp</FieldHelp>
                                            </Feedback>
                                        </TextEdit>
                                    </FieldBody>
                                </Field>

                                <Field Horizontal="true">
                                    <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.BaseTermChartCode</FieldLabel>
                                    <FieldBody ColumnSize="ColumnSize.Is10">
                                        <TextEdit Placeholder="@MyText?.BaseTermChartCode"
                                                  @bind-Text="@BaseTermsState.Value.ResultBaseTranslation.BaseTerm.ChartCode">
                                            <Feedback>
                                                <FieldHelp>@MyText?.BaseTermChartCodeHelp</FieldHelp>
                                            </Feedback>
                                        </TextEdit>
                                    </FieldBody>
                                </Field>

                                <Field Horizontal="true">
                                    <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.BaseTermExamples</FieldLabel>
                                    <FieldBody ColumnSize="ColumnSize.Is10">
                                        <ListExamples 
                                            Examples="@BaseTermsState.Value.ResultBaseTranslation.BaseTerm.GetExamples()" 
                                            OnExampleCallback="OnExampleAdd" />
                                    </FieldBody>
                                </Field>

                                <Field Horizontal="true">
                                    <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.BaseTermSynonyms</FieldLabel>
                                    <FieldBody ColumnSize="ColumnSize.Is10">
                                        <ListSynonyms 
                                            Synonyms="@BaseTermsState.Value.ResultBaseTranslation.BaseTerm.GetSynonyms()" 
                                            OnSynonymCallback="OnSynonymAdd" />
                                    </FieldBody>
                                </Field>
                                <Field Horizontal="true">
                                    <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.Links</FieldLabel>
                                    <FieldBody ColumnSize="ColumnSize.Is10">
                                        <ListLinks Links="@BaseTermsState?.Value?.Links" OnLinkCallback="OnLinkAdd" />
                                    </FieldBody>
                                </Field>
                            </Validations>

                        </CardBody>
                        <CardFooter Padding="Padding.Is3">

                            <Buttons Role="ButtonsRole.Addons">
                                <Button Type="ButtonType.Submit" Color="Color.Primary" Clicked="@OnSaveClicked">
                                    @MyText?.Save
                                </Button>
                                <Button Type="ButtonType.Button" Color="Color.Light" onClick="history.back();">
                                    @MyText?.Back
                                </Button>
                                <Button Type="ButtonType.Submit" Color="Color.Info" Clicked="@OnSpeechPlClicked">
                                    @MyText?.Speech
                                </Button>
                            </Buttons>

                        </CardFooter>
                    </Card>
                }
            </Column>
        </Row>
    </Authorized>

    <NotAuthorized>
        <Row>
            <Column>
                @if (BaseTermsState?.Value?.ResultBaseTranslation.BaseTerm is not null)
                {
                    <Card Margin="Margin.Is4.OnY">
                        <CardHeader>
                            <CardTitle>
                                [@BaseTermLanguage]@BaseTermsState?.Value.ResultBaseTranslation.BaseTerm.Name
                            </CardTitle>
                        </CardHeader>
                        <CardBody>
                            <Field Horizontal="true">
                                <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.BaseTermName</FieldLabel>
                                <FieldBody ColumnSize="ColumnSize.Is10">
                                    <div class="field"><div class="control">
                                        @BaseTermsState?.Value.ResultBaseTranslation.BaseTerm.Name
                                    </div></div>
                                </FieldBody>
                            </Field>
                            <Field Horizontal="true">
                                <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.BaseTermDefinition</FieldLabel>
                                <FieldBody ColumnSize="ColumnSize.Is10">
                                    <div class="field"><div class="control">
                                        @BaseTermsState?.Value.ResultBaseTranslation.BaseTerm.Definition
                                    </div></div>
                                </FieldBody>
                            </Field>
                            <Field Horizontal="true">
                                <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.BaseTermExamples</FieldLabel>
                                <FieldBody ColumnSize="ColumnSize.Is10">
                                    @if (BaseTermsState?.Value.ResultBaseTranslation.BaseTerm.Examples is not null)
                                    {
                                        <ListGroup Flush="true">
                                            @foreach (var e in (BaseTermsState?.Value.ResultBaseTranslation.BaseTerm.Examples)
                                                .Where(e => !string.IsNullOrEmpty(e)))
                                            {
                                                <div class="field"><div class="control">@e</div></div>
                                            }
                                        </ListGroup>
                                    }
                                </FieldBody>
                            </Field>
                            <Field Horizontal="true">
                                <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.BaseTermSynonyms</FieldLabel>
                                <FieldBody ColumnSize="ColumnSize.Is10">
                                    @if (BaseTermsState?.Value?.ResultBaseTranslation?.BaseTerm?.Synonyms is not null)
                                    {
                                        <ListGroup Flush="true">
                                            @foreach (var s in (BaseTermsState?.Value.ResultBaseTranslation.BaseTerm.Synonyms)
                                                .Where(s => !string.IsNullOrEmpty(s)))
                                            {
                                                <div class="field"><div class="control">@s</div></div>
                                            }
                                        </ListGroup>
                                    }
                                </FieldBody>
                            </Field>
                            <Field Horizontal="true">
                                <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.BaseTermSlug</FieldLabel>
                                <FieldBody ColumnSize="ColumnSize.Is10">
                                    @BaseTermsState?.Value.ResultBaseTranslation.BaseTerm.Slug
                                </FieldBody>
                            </Field>

                            <Field Horizontal="true">
                                    <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.BaseTermChartCode</FieldLabel>
                                    <FieldBody ColumnSize="ColumnSize.Is10">
                                        @BaseTermsState.Value.ResultBaseTranslation.BaseTerm.ChartCode                                            
                                    </FieldBody>
                                </Field>
                        </CardBody>
                        <CardFooter Padding="Padding.Is3">
                            <Field Horizontal="true">
                                <FieldLabel ColumnSize="ColumnSize.Is2">&nbsp;</FieldLabel>
                                <FieldBody ColumnSize="ColumnSize.Is10">
                                    <Buttons Role="ButtonsRole.Addons">
                                        <Button Type="ButtonType.Button" Color="Color.Light" onClick="history.back();">
                                            @MyText?.Back
                                        </Button>
                                        <Button Type="ButtonType.Submit" Color="Color.Info" Clicked="@OnSpeechPlClicked">
                                            @MyText?.Speech
                                        </Button>
                                    </Buttons>
                                </FieldBody>
                            </Field>
                        </CardFooter>
                    </Card>
                    <Card Margin="Margin.Is4.FromBottom">
                        <CardHeader>
                            <CardTitle>@MyText?.Links</CardTitle>
                        </CardHeader>
                        <CardBody>
                            @if (BaseTermsState?.Value?.Links is not null)
                            {
                                <ListGroup Flush="true">
                                    @if (BaseTermsState?.Value.Links is not null)
                                    {
                                        foreach (var link in BaseTermsState.Value.Links)
                                        {
                                            <div class="field">
                                                <div class="control">
                                                    <a href="@link.Link" target="_blank">
                                                        @link.Link
                                                    </a>
                                                </div>
                                            </div>
                                        }
                                    }
                                </ListGroup>
                            }
                        </CardBody>
                    </Card>
                }
            </Column>
        </Row>
    </NotAuthorized>
</AuthorizeView>

