@page "/editbaseterm/{BaseTermId:long}"
@page "/editbaseterm/{BaseTermSlug}"
@using OriinDic.Helpers
@inherits DicBasePage

<PageHeader IsLoading="@(BaseTermsState?.Value.IsLoading ?? true)" CurrentAlertText="@CurrentAlert" LoadingText="@MyText?.Loading" HeaderText="@HeaderForBaseTerm" />

<Row>
    <Column>
        @if (!(BaseTermsState?.Value?.ResultBaseTranslation.BaseTerm is null)) 
        { 
            <Card Margin="Margin.Is4.OnY">
                <CardHeader>
                    <CardTitle>[@BaseTermLanguage]@BaseTermsState.Value.ResultBaseTranslation.BaseTerm.Name</CardTitle>
                    <CardSubtitle>@MyText?.BaseTermHeader</CardSubtitle>
                </CardHeader>
                <CardBody>
                    <Field IsHorizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.BaseTermName</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">

                            <AuthorizeView Roles="@Const.RolesBaseEditors">
                                <Authorized>
                                    <TextEdit Placeholder="@MyText?.BaseTermName"
                                              @bind-Text="@BaseTermsState.Value.ResultBaseTranslation.BaseTerm.Name" />
                                </Authorized>
                                <NotAuthorized>
                                    <div class="field"><div class="control">@BaseTermsState.Value.ResultBaseTranslation.BaseTerm.Name</div></div>
                                </NotAuthorized>
                            </AuthorizeView>
                        </FieldBody>
                    </Field>
                    <Field IsHorizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.BaseTermDefinition</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <AuthorizeView Roles="@Const.RolesBaseEditors">
                                <Authorized>
                                    <TextEdit Placeholder="@MyText?.BaseTermDefinition"
                                              @bind-Text="@BaseTermsState.Value.ResultBaseTranslation.BaseTerm.Definition" />
                                </Authorized>
                                <NotAuthorized>
                                    <div class="field"><div class="control">@BaseTermsState.Value.ResultBaseTranslation.BaseTerm.Definition</div></div>
                                </NotAuthorized>
                            </AuthorizeView>
                        </FieldBody>
                    </Field>
                    <Field IsHorizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.BaseTermExamples</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <AuthorizeView Roles="@Const.RolesBaseEditors">
                                <Authorized>
                                    <ListExamples Examples="@BaseTermsState.Value.ResultBaseTranslation.BaseTerm.GetExamples()" OnExampleCallback="OnExampleAdd" />
                                </Authorized>
                                <NotAuthorized>
                                    @if (!(BaseTermsState?.Value?.ResultBaseTranslation?.BaseTerm?.Examples is null))
                                    {
                                        <ListGroup Flush="true">
                                            @foreach (var e in BaseTermsState.Value.ResultBaseTranslation.BaseTerm.Examples)
                                            {
                                                <div class="field"><div class="control">@e</div></div>
                                            }
                                        </ListGroup>
                                    }
                                </NotAuthorized>
                            </AuthorizeView>
                        </FieldBody>
                    </Field>
                    <Field IsHorizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.BaseTermSynonyms</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <AuthorizeView Roles="@Const.RolesBaseEditors">
                                <Authorized>
                                    <ListSynonyms Synonyms="@BaseTermsState.Value.ResultBaseTranslation.BaseTerm.GetSynonyms()" OnSynonymCallback="OnSynonymAdd" />
                                </Authorized>
                                <NotAuthorized>
                                    @if (!(BaseTermsState?.Value?.ResultBaseTranslation?.BaseTerm?.Synonyms is null)) {
                                        <ListGroup Flush="true">
                                            @foreach (var s in BaseTermsState.Value.ResultBaseTranslation.BaseTerm.Synonyms)
                                            {
                                                <div class="field"><div class="control">@s</div></div>
                                            }
                                        </ListGroup>
                                    }
                                </NotAuthorized>
                            </AuthorizeView>
                        </FieldBody>
                    </Field>
                    <Field IsHorizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">@MyText?.BaseTermSlug</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            @BaseTermsState.Value.ResultBaseTranslation.BaseTerm.Slug
                        </FieldBody>
                    </Field>
                </CardBody>
                <CardFooter Padding="Padding.Is3">
                    <Field Horizontal="true">
                        <FieldBody ColumnSize="ColumnSize.Is12">
                            <Buttons Role="ButtonsRole.Addons">
                                <AuthorizeView Roles="@Const.RolesBaseEditors">
                                    <Authorized>
                                        <Button Type="ButtonType.Submit" Color="Color.Primary" Clicked="@OnSaveClicked">@MyText?.Save</Button>
                                    </Authorized>
                                </AuthorizeView>
                                <input class="button" type="button" value="@MyText?.Back" onClick="history.back();">
                                <Button Type="ButtonType.Submit" Color="Color.Info" Clicked="@OnSpeechPlClicked">@MyText?.Speech</Button>
                            </Buttons>
                        </FieldBody>
                    </Field>
                </CardFooter>
            </Card>
            <Card Margin="Margin.Is4.FromBottom">
                <CardHeader>
                    <CardTitle>@MyText?.Links</CardTitle>
                </CardHeader>
                <CardBody>
                    <AuthorizeView Roles="@Const.RolesBaseEditors">
                        <Authorized>
                            <ListLinks Links="@BaseTermsState?.Value?.Links" OnLinkCallback="OnLinkAdd" />
                        </Authorized>
                        <NotAuthorized>
                            @if (!(BaseTermsState?.Value?.Links is null))
                            {
                                <ListGroup Flush="true">
                                    @foreach (var link in BaseTermsState.Value.Links)
                                    {
                                        <div class="field"><div class="control"><a href="@link.Link" target="_blank">@link.Link</a></div></div>
                                    }
                                </ListGroup>
                            }
                        </NotAuthorized>
                    </AuthorizeView>
                </CardBody>
            </Card>
        }
    </Column>
</Row>
